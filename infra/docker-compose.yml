version: '3'

services:
  # アプリコンテナ
  web:
    container_name: web
    ports:
      - 80:80
      - 443:443
    privileged: true
    volumes:
      - ../src:/var/www/html
    depends_on:
      - db
    build: ./docker/web
    tty: true
    restart: always
    networks:
      app_net:
        ipv4_address: 172.26.0.3

  # データベースコンテナ
  db:
    container_name: mysql
    ports:
      - 3306:3306
    privileged: true
    volumes:
      - db-store:/var/lib/mysql
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    build: ./docker/mysql
    command: docker-entrypoint.sh mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    tty: true
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=$TZ
    networks:
      app_net:
        ipv4_address: 172.26.0.4

  # phpMyAdmin
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${MYSQL_HOST}
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_PASSWORD}
    links:
      - db
    ports:
      - 8080:80
    volumes:
      - ./docker/phpmyadmin/sessions:/sessions
    restart: always
    networks:
      app_net:
        ipv4_address: 172.26.0.5

  # API (true skill)
  api:
    container_name: api
    build:
      context: ./docker/django
      dockerfile: Dockerfile
    tty: true
    ports:
        - 8000:8000
    volumes:
      - ../api/apps:/work
    command: python3 manage.py runserver 0.0.0.0:8000
    restart: always
    networks:
      app_net:
        ipv4_address: 172.26.0.6

volumes:
  db-store:

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 172.26.0.0/28
